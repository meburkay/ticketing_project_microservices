<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--This line defines that this pom.xml is a template and we will not create a jar from this. This pom will be parent pom for the other projects and added to them. By this way we manage the dependencies from one place easily. Normally instead of pom there must be jar. And in default it is jar. Because of that in normal pom files we do not need to write this line.-->
    <packaging>pom</packaging>


    

    <modules>
        <module>app-domain-model</module>
        <module>user-service</module>
        <module>project-service</module>
        <module>task-service</module>
        <module>app-client-management</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.cydeo</groupId>
    <artifactId>ticketing_project_microservices</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ticketing-project-microservices</name>
    <description>ticketing-project-microservices</description>

    <!--We create here all the necessary properties with their versions. And we use their names with ${} at the dependencies without versions. We can manage the version of the dependencies from one place here.-->
    <properties>
        <java.version>11</java.version>
        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <modelmapper.version>2.3.9</modelmapper.version>
        <lombok.version>1.18.22</lombok.version>
        <spring-cloud.version>2.2.6.RELEASE</spring-cloud.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    </properties>

    <!--    Different from the other poms we have a title as dependencyManagement for the management of the dependencies.-->
    <dependencyManagement>

        <dependencies>
            <dependency>
                <groupId>com.cydeo</groupId>
                <artifactId>app-domain-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cydeo</groupId>
                <artifactId>app-client-management</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
        </plugins>
<!--        The plugin below is a springframework maven plugin. We add the same plugin to the services pom too but added some configuration to them. And by this way the docker images of the services are automatically created.-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>



</project>
